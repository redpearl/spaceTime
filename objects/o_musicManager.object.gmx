<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(sng_main) audio_play_sound(sng_main,1,1)

if !audio_is_playing(sng_main_backwards){
    audio_play_sound(sng_main_backwards,1,1);
    audio_pause_sound(sng_main_backwards);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.isRecording &amp;&amp; (!audio_is_playing(sng_main_backwards) || audio_is_paused(sng_main_backwards)) ) {
    if (audio_is_playing(sng_main) ){
        audio_pause_sound(sng_main);
    }
    show_debug_message('play backwards');
    
    if(!audio_is_playing(sng_main_backwards)){
        audio_play_sound(sng_main_backwards, 1, 1);
    } else if(audio_is_paused(sng_main_backwards)){
        audio_resume_sound(sng_main_backwards);
    }
    audio_sound_set_track_position(sng_main_backwards, audio_sound_length(sng_main) - audio_sound_get_track_position(sng_main));
} else if (global.isRecording &amp;&amp; (!audio_is_playing(sng_main) || audio_is_paused(sng_main)) ){
    if(audio_is_playing(sng_main_backwards) ){
        audio_pause_sound(sng_main_backwards);
    }
    show_debug_message('play forwards');
    
    if(!audio_is_playing(sng_main)){
        audio_play_sound(sng_main, 1, 1);
    } else if(audio_is_paused(sng_main)){
        audio_resume_sound(sng_main);
    }
    audio_sound_set_track_position(sng_main, audio_sound_length(sng_main_backwards) - audio_sound_get_track_position(sng_main_backwards));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
